{"version":3,"file":"prettyLog.umd.js","sources":["../src/prettyLog.js"],"sourcesContent":["export const prettyLog = {\r\n  debug: true,\r\n  _defaultMessageStyle: 'color:gray;font-family:Roboto;font-size:0.8rem;',\r\n  _defaultBadgeStyle: 'color:white;font-family:Roboto;font-size:0.7rem;background-color:#a2b9bc;padding: 1px 5px; border-radius: 0.4rem;margin-right:5px;',\r\n  _defaultBadgeStyleNode:'\\x1b[30m\\x1b[47m',\r\n  /**\r\n  * @param {Object[]} logStyles Array of style [{name,badge, badgeStyle,messageStyle}].\r\n  * @param {string} logStyles.name name of the new log.\r\n  * @param {string} [logStyles.badge=] label.\r\n  * @param {string} [logStyles.badgeStyle=] label style (cssStyle).\r\n  * @param {string} [logStyles.messageStyle=] message (cssStyle).\r\n  */\r\n  addManyLogStyles(logStyles) {\r\n    logStyles.forEach(newLog => {\r\n      const { name, badge, badgeStyle, messageStyle } = newLog;\r\n\r\n      this.addLogStyle(name, badge, badgeStyle, messageStyle)\r\n    })\r\n\r\n  },\r\n  addLogStyle(name, badge, badgeStyle = '', messageStyle = '') {\r\n    Object.defineProperty(this, name, {\r\n      get: function () {\r\n        if (this.debug) {\r\n          switch (typeof window) {\r\n            case 'undefined':\r\n              const nodeBadgeStyle = this.css2AnsiCode(this._defaultBadgeStyle+badgeStyle);\r\n              const nodeMessageStyle = this.css2AnsiCode(this._defaultMessageStyle+messageStyle);\r\n              \r\n              return global.console.log.bind(global.console, `${nodeBadgeStyle.color}${nodeBadgeStyle.backgroundColor}${badge}\\x1b[0m ${nodeMessageStyle.color}${nodeMessageStyle.backgroundColor}%s\\x1b[0m`);\r\n\r\n            default:\r\n              return window.console.log.bind(window.console, `%c${badge}%c%s`, this._defaultBadgeStyle + ';' + badgeStyle, this._defaultMessageStyle + ';' + messageStyle);\r\n          }\r\n        }\r\n        return function () { };\r\n      },\r\n      configurable: true\r\n    });\r\n\r\n  },\r\n  css2json(style){\r\n    const styleSplitted = style.split(';'); \r\n    const styleTrimmed = styleSplitted.reduce((obj,property)=>{\r\n      \r\n      const propTrimmed = property.trim();\r\n      const propAndValue = propTrimmed.split(':');\r\n      obj[propAndValue[0]]= propAndValue[1]\r\n      return obj\r\n      \r\n    },{})\r\n\r\n    return styleTrimmed\r\n\r\n  },\r\n  css2AnsiCode(style){\r\n    const styleJson = this.css2json(style);\r\n    const ansiStyle = {\r\n      color:'',\r\n      backgroundColor:'',\r\n    };\r\n   \r\n    for (const key in styleJson) {\r\n      if (styleJson.hasOwnProperty(key)) {\r\n        const value = styleJson[key];\r\n        switch (key) {\r\n          case 'color':\r\n            \r\n\r\n            ansiStyle.color = this.colorAnsi(value);\r\n            break;\r\n          case 'background-color':\r\n            \r\n            ansiStyle.backgroundColor = this.backgroundColorAnsi(value);\r\n            break;\r\n        \r\n          default:\r\n            break;\r\n        }\r\n      }\r\n     \r\n    }\r\n    return ansiStyle\r\n  },\r\n\r\n  colorAnsi(color){\r\n    return ansiCodeTools.color2AnsiCode(color)\r\n  },\r\n  backgroundColorAnsi(color){\r\n    return ansiCodeTools.backgroundColor2AnsiCode(color)\r\n  },\r\n  logON() {\r\n    this.debug = true\r\n    this.msg(`Logger STARTED`);\r\n  },\r\n  logOFF() {\r\n    this.msg(`Logger STOPPED`);\r\n    this.debug = false\r\n  },\r\n  get msg() {\r\n    if (this.debug) {\r\n      switch (typeof window) {\r\n        case 'undefined':\r\n          return global.console.log.bind(global.console, `${this._defaultBadgeStyleNode} Msg: \\x1b[0m %s`);\r\n\r\n        default:\r\n          return window.console.log.bind(window.console, '%cMsg:%c %s', this._defaultBadgeStyle + ';background-color:gray', 'color:gray;font-family:Roboto;font-size:0.8rem;');\r\n      }\r\n    }\r\n    return function () { };\r\n  },\r\n\r\n}\r\n\r\n\r\nexport const ansiCodeTools = {\r\n \r\n  color2AnsiCode(color){\r\n   \r\n    const isHex= this.isHex(color.trim());\r\n   \r\n    const isPalette = this.isPalette(color.trim());\r\n\r\n    \r\n   \r\n    \r\n    if (isHex) {\r\n      const rgbColor = this.hexToRgb(color.trim())\r\n      const ansiColor = this.rgbToAnsiColor(rgbColor)\r\n\r\n      return ansiColor\r\n    }\r\n    if (isPalette){\r\n      const hexColor = colorsPalette[color.trim().toLowerCase()];\r\n      const rgbColor = this.hexToRgb(hexColor)\r\n      const ansiColor = this.rgbToAnsiColor(rgbColor)\r\n      return ansiColor\r\n    }\r\n    return ''\r\n  },\r\n  backgroundColor2AnsiCode(color){\r\n    const isHex= this.isHex(color.trim());\r\n    const isPalette = this.isPalette(color.trim());\r\n    if (isHex) {\r\n      const rgbColor = this.hexToRgb(color.trim())\r\n      const ansiColor = this.rgbToAnsiBackgroundColor(rgbColor)\r\n\r\n      return ansiColor\r\n    }\r\n    if (isPalette){\r\n      const hexColor = colorsPalette[color.trim().toLowerCase()];\r\n      const rgbColor = this.hexToRgb(hexColor)\r\n      const ansiColor = this.rgbToAnsiBackgroundColor(rgbColor)\r\n      return ansiColor\r\n    }\r\n    return ''\r\n  },\r\n  isHex: (color)=>{\r\n    const containHash = color.includes('#');\r\n    const lenghtRight = color.length === 7;\r\n    return containHash && lenghtRight\r\n  },\r\n  isPalette: (color)=>{\r\n    \r\n    const knowedPalettes = Object.keys(colorsPalette);\r\n    return knowedPalettes.includes(color.trim().toLowerCase());\r\n  },\r\n  hexToRgb(hex) {\r\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, function(m, r, g, b) {\r\n      return r + r + g + g + b + b;\r\n    });\r\n  \r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n      r: parseInt(result[1], 16),\r\n      g: parseInt(result[2], 16),\r\n      b: parseInt(result[3], 16)\r\n    } : null;\r\n  },\r\n  rgbToAnsiColor(rgb){\r\n    return \"\\x1B[38;2;\"+ rgb.r+';'+rgb.g+';'+rgb.b+'m'\r\n  },\r\n  rgbToAnsiBackgroundColor(rgb){\r\n    return \"\\x1B[48;2;\"+ rgb.r+';'+rgb.g+';'+rgb.b+'m'\r\n  },\r\n} \r\n\r\n\r\nexport const colorsPalette = {\r\n  aliceblue:'#F0F8FF',\r\n  antiquewhite:'#FAEBD7',\r\n  aqua:'#00FFFF',\r\n  aquamarine:'#7FFFD4',\r\n  azure:'#F0FFFF',\r\n  beige:'#F5F5DC',\r\n  bisque:'#FFE4C4',\r\n  black:'#000000',\r\n  blanchedalmond:'#FFEBCD',\r\n  blue:'#0000FF',\r\n  blueviolet:'#8A2BE2',\r\n  brown:'#A52A2A',\r\n  burlywood:'#DEB887',\r\n  cadetblue:'#5F9EA0',\r\n  chartreuse:'#7FFF00',\r\n  chocolate:'#D2691E',\r\n  coral:'#FF7F50',\r\n  cornflowerblue:'#6495ED',\r\n  cornsilk:'#FFF8DC',\r\n  crimson:'#DC143C',\r\n  cyan:'#00FFFF',\r\n  darkblue:'#00008B',\r\n  darkcyan:'#008B8B',\r\n  darkgoldenrod:'#B8860B',\r\n  darkgray:'#A9A9A9',\r\n  darkgrey:'#A9A9A9',\r\n  darkgreen:'#006400',\r\n  darkkhaki:'#BDB76B',\r\n  darkmagenta:'#8B008B',\r\n  darkolivegreen:'#556B2F',\r\n  darkorange:'#FF8C00',\r\n  darkorchid:'#9932CC',\r\n  darkred:'#8B0000',\r\n  darksalmon:'#E9967A',\r\n  darkseagreen:'#8FBC8F',\r\n  darkslateblue:'#483D8B',\r\n  darkslategray:'#2F4F4F',\r\n  darkslategrey:'#2F4F4F',\r\n  darkturquoise:'#00CED1',\r\n  DarkViolet:'#9400D3',\r\n  DeepPink:'#FF1493',\r\n  DeepSkyBlue:'#00BFFF',\r\n  dimgray:'#696969',\r\n  dimgrey:'#696969',\r\n  dodgerblue:'#1E90FF',\r\n  firebrick:'#B22222',\r\n  floralwhite:'#FFFAF0',\r\n  forestgreen:'#228B22',\r\n  fuchsia:'#FF00FF',\r\n  gainsboro:'#DCDCDC',\r\n  ghostwhite:'#F8F8FF',\r\n  gold:'#FFD700',\r\n  goldenrod:'#DAA520',\r\n  gray:'#808080',\r\n  grey:'#808080',\r\n  green:'#008000',\r\n  greenyellow:'#ADFF2F',\r\n  honeydew:'#F0FFF0',\r\n  hotpink:'#FF69B4',\r\n  indianred:'#CD5C5C',\r\n  indigo:'#4B0082',\r\n  ivory:'#FFFFF0',\r\n  khaki:'#F0E68C',\r\n  lavender:'#E6E6FA',\r\n  lavenderblush:'#FFF0F5',\r\n  lawngreen:'#7CFC00',\r\n  lemonchiffon:'#FFFACD',\r\n  lightblue:'#ADD8E6',\r\n  lightcoral:'#F08080',\r\n  lightcyan:'#E0FFFF',\r\n  lightgoldenrodyellow:'#FAFAD2',\r\n  lightgray:'#D3D3D3',\r\n  lightgrey:'#D3D3D3',\r\n  lightgreen:'#90EE90',\r\n  lightpink:'#FFB6C1',\r\n  lightsalmon:'#FFA07A',\r\n  lightseagreen:'#20B2AA',\r\n  lightskyblue:'#87CEFA',\r\n  lightslategray:'#778899',\r\n  lightslategrey:'#778899',\r\n  lightsteelblue:'#B0C4DE',\r\n  lightyellow:'#FFFFE0',\r\n  lime:'#00FF00',\r\n  limegreen:'#32CD32',\r\n  linen:'#FAF0E6',\r\n  magenta:'#FF00FF',\r\n  maroon:'#800000',\r\n  mediumaquamarine:'#66CDAA',\r\n  mediumblue:'#0000CD',\r\n  mediumorchid:'#BA55D3',\r\n  mediumpurple:'#9370DB',\r\n  mediumseagreen:'#3CB371',\r\n  mediumslateblue:'#7B68EE',\r\n  mediumspringgreen:'#00FA9A',\r\n  mediumturquoise:'#48D1CC',\r\n  mediumvioletred:'#C71585',\r\n  midnightblue:'#191970',\r\n  mintcream:'#F5FFFA',\r\n  mistyrose:'#FFE4E1',\r\n  moccasin:'#FFE4B5',\r\n  navajowhite:'#FFDEAD',\r\n  navy:'#000080',\r\n  oldlace:'#FDF5E6',\r\n  olive:'#808000',\r\n  olivedrab:'#6B8E23',\r\n  orange:'#FFA500',\r\n  orangered:'#FF4500',\r\n  orchid:'#DA70D6',\r\n  palegoldenrod:'#EEE8AA',\r\n  palegreen:'#98FB98',\r\n  paleturquoise:'#AFEEEE',\r\n  palevioletred:'#DB7093',\r\n  papayawhip:'#FFEFD5',\r\n  peachpuff:'#FFDAB9',\r\n  peru:'#CD853F',\r\n  pink:'#FFC0CB',\r\n  plum:'#DDA0DD',\r\n  powderblue:'#B0E0E6',\r\n  purple:'#800080',\r\n  rebeccapurple:'#663399',\r\n  red:'#FF0000',\r\n  rosybrown:'#BC8F8F',\r\n  royalblue:'#4169E1',\r\n  saddlebrown:'#8B4513',\r\n  salmon:'#FA8072',\r\n  sandybrown:'#F4A460',\r\n  seagreen:'#2E8B57',\r\n  seashell:'#FFF5EE',\r\n  sienna:'#A0522D',\r\n  silver:'#C0C0C0',\r\n  skyblue:'#87CEEB',\r\n  slateblue:'#6A5ACD',\r\n  slategray:'#708090',\r\n  slategrey:'#708090',\r\n  snow:'#FFFAFA',\r\n  springgreen:'#00FF7F',\r\n  steelblue:'#4682B4',\r\n  tan:'#D2B48C',\r\n  teal:'#008080',\r\n  thistle:'#D8BFD8',\r\n  tomato:'#FF6347',\r\n  turquoise:'#40E0D0',\r\n  violet:'#EE82EE',\r\n  wheat:'#F5DEB3',\r\n  white:'#FFFFFF',\r\n  whitesmoke:'#F5F5F5',\r\n  yellow:'#FFFF00',\r\n  yellowgreen:'#9ACD32'\r\n}"],"names":["prettyLog","debug","_defaultMessageStyle","_defaultBadgeStyle","_defaultBadgeStyleNode","addManyLogStyles","logStyles","forEach","newLog","_this","addLogStyle","name","badge","badgeStyle","messageStyle","Object","defineProperty","this","get","window","nodeBadgeStyle","css2AnsiCode","nodeMessageStyle","global","console","log","bind","color","backgroundColor","configurable","css2json","style","split","reduce","obj","property","propAndValue","trim","styleJson","ansiStyle","key","hasOwnProperty","value","colorAnsi","backgroundColorAnsi","ansiCodeTools","color2AnsiCode","backgroundColor2AnsiCode","logON","msg","logOFF","isHex","isPalette","rgbColor","hexToRgb","rgbToAnsiColor","hexColor","colorsPalette","toLowerCase","rgbToAnsiBackgroundColor","includes","length","keys","hex","replace","m","r","g","b","result","exec","parseInt","rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","DarkViolet","DeepPink","DeepSkyBlue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen"],"mappings":"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"}